{"ast":null,"code":"import { ADD_BUS, ADD_BUS_FAILED } from './type';\nimport axios from 'axios';\nimport setAlert from './aleart';\n\nconst addBus = ({\n  busName,\n  agency,\n  vehicleNo,\n  seats,\n  busType,\n  seatCategory,\n  busStaff,\n  policy,\n  secdule,\n  image,\n  from,\n  to,\n  arrivalTime,\n  departureTime\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  console.log(secdule);\n\n  for (let day = 0; day < secdule.length; day++) {\n    secdule[day] = days.indexOf(secdule[day]);\n  }\n\n  const start = from.trim().split(',');\n  const End = to.trim().split(',');\n  from = {\n    \"city\": start[0],\n    \"state\": start[1]\n  };\n  to = {\n    \"city\": End[0],\n    \"state\": End[1]\n  };\n  const data = {\n    \"from\": {\n      \"city\": start[0],\n      \"state\": start[1]\n    },\n    \"to\": {\n      \"city\": End[0],\n      \"state\": End[1]\n    },\n    date\n  };\n  const body = JSON.stringify({\n    busName,\n    agency,\n    vehicleNo,\n    seats,\n    busType,\n    seatCategory,\n    busStaff,\n    policy,\n    secdule,\n    image,\n    from,\n    to,\n    arrivalTime,\n    departureTime\n  });\n\n  try {\n    const res = await axios.post('/api/admins/admin/Addbus', body, config);\n    console.log(res);\n    dispatch({\n      type: ADD_BUS,\n      payload: res.data\n    });\n    dispatch(alert('bus has added succefully', 'success'));\n  } catch (err) {\n    console.log(err);\n    dispatch(alert('there was an error while adding the bus', 'danger'));\n    dispatch({\n      type: ADD_BUS_FAILED\n    });\n  }\n};\n\nexport default addBus;","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/bus.js"],"names":["ADD_BUS","ADD_BUS_FAILED","axios","setAlert","addBus","busName","agency","vehicleNo","seats","busType","seatCategory","busStaff","policy","secdule","image","from","to","arrivalTime","departureTime","dispatch","config","headers","days","console","log","day","length","indexOf","start","trim","split","End","data","date","body","JSON","stringify","res","post","type","payload","alert","err"],"mappings":"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","sourcesContent":["import { ADD_BUS, ADD_BUS_FAILED } from './type';\nimport axios from 'axios';\nimport setAlert from './aleart';\n\nconst addBus =({\n    busName,\n    agency,\n    vehicleNo,\n    seats,\n    busType,\n    seatCategory,\n    busStaff,\n    policy,\n    secdule,\n    image,\n    from,\n    to,\n    arrivalTime,\n    departureTime\n}) => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type':'application/json'\n        }\n    };\n\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    console.log(secdule)\n    for (let day = 0; day < secdule.length; day++){\n        secdule[day] = days.indexOf(secdule[day]);\n    }\n    const start = from.trim().split(',')\n    const End = to.trim().split(',')\n\n    from = { \"city\": start[0], \"state\": start[1] }\n    to = { \"city\": End[0], \"state\": End[1] }\n    const data = {\n        \"from\": {\n            \"city\": start[0],\n            \"state\": start[1]\n        },\n        \"to\": {\n            \"city\": End[0],\n            \"state\": End[1]\n        },\n        date\n    }\n\n    const body = JSON.stringify({\n        busName,\n        agency,\n        vehicleNo,\n        seats,\n        busType,\n        seatCategory,\n        busStaff,\n        policy,\n        secdule,\n        image,\n        from,\n        to,\n        arrivalTime,\n        departureTime\n    });\n\n    try {\n        const res = await axios.post('/api/admins/admin/Addbus', body, config);\n        console.log(res)\n        dispatch({\n            type: ADD_BUS,\n            payload: res.data\n        });\n        dispatch(alert('bus has added succefully', 'success'));\n    } catch (err) {\n        console.log(err);\n        dispatch(alert('there was an error while adding the bus', 'danger'));\n\n        dispatch({\n            type: ADD_BUS_FAILED\n        });\n\n    }\n    };\n\nexport default addBus"]},"metadata":{},"sourceType":"module"}