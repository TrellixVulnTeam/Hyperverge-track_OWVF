{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport { USER_LOADED, AUTH_ERROR, SET_ALERT, REMOVE_ALERT, REGISTER_FAIL, REGISTER_SUCCESS } from '../action/type'; // LOAD USER\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Ragister user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users/signup', body, config);\n    console.log(\"res\");\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.err;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/auth.js"],"names":["axios","setAlert","USER_LOADED","AUTH_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_FAIL","REGISTER_SUCCESS","loadUser","dispatch","localStorage","token","setAuthToken","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","console","log","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,EAAqBC,UAArB,EAAgCC,SAAhC,EAA2CC,YAA3C,EAAyDC,aAAzD,EAAwEC,gBAAxE,QAAgG,gBAAhG,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACpBC,IAAAA,YAAY,CAACF,YAAY,CAACC,KAAd,CAAZ;AACH;;AACD,MAAI;AACA,UAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,WAAV,CAAlB;AACAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,WADD;AAELc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACVT,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH;AACJ,CAfM,C,CAiBP;;AACA,OAAO,MAAMgB,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMb,QAAN,IAAkB;AACrE,QAAMc,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADE,GAAf;AAGA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMb,KAAK,CAAC4B,IAAN,CAAW,mBAAX,EAAgCH,IAAhC,EAAsCF,MAAtC,CAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACArB,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAER,gBADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACH,GATD,CASE,OAAOU,GAAP,EAAY;AACVW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACA,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBC,GAAjC;;AACA,QAAIa,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIzB,QAAQ,CAACR,QAAQ,CAACiC,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AACD1B,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAGH;AACJ,CAxBM","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport { USER_LOADED,AUTH_ERROR,SET_ALERT, REMOVE_ALERT, REGISTER_FAIL, REGISTER_SUCCESS } from '../action/type';\n\n// LOAD USER\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n};\n\n// Ragister user\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    const body = JSON.stringify({ name, email, password });\n    try {\n        const res = await axios.post('/api/users/signup', body, config);\n        console.log(\"res\")\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err)\n        const errors = err.response.data.err;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}