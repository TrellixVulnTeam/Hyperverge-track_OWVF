{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport { BOOKING_FAIL, BOOKING_SUCCESS } from './type';\nexport const bookSeats = (busId, userData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(userData);\n    const res = await axios.post(`/api/buses/${busId}/tickets`, body, config);\n    console.log(res.data);\n    dispatch({\n      type: BOOKING_SUCCESS,\n      payload: res.data\n    });\n    alert(\"Tickets booked succesfully\", \"success\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log;\n\n    if (errors) {\n      errors.forEach(error => {\n        console.log(error.msg);\n        dispatch(alert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch(alert(err.response.data.msg, \"danger\"));\n    dispatch({\n      type: BOOKING_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/Bookseat.js"],"names":["axios","setAlert","BOOKING_FAIL","BOOKING_SUCCESS","bookSeats","busId","userData","dispatch","config","headers","body","JSON","stringify","res","post","console","log","data","type","payload","alert","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SACIC,YADJ,EAEIC,eAFJ,QAGO,QAHP;AAKA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAiB;AAC3D,MAAI;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAb;AACA,UAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAY,cAAaT,KAAM,UAA/B,EAA0CK,IAA1C,EAAgDF,MAAhD,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AAEAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf,eADD;AAELgB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAG,IAAAA,KAAK,CAAC,4BAAD,EAA+B,SAA/B,CAAL;AACH,GAhBD,CAiBA,OAAMC,GAAN,EAAU;AACN,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;AACAP,IAAAA,OAAO,CAACC,GAAR;;AACA,QAAIM,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAI;AACpBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACC,GAAlB;AACAnB,QAAAA,QAAQ,CAACa,KAAK,CAACK,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAN,CAAR;AACH,OAHD;AAIH;;AACDnB,IAAAA,QAAQ,CAACa,KAAK,CAACC,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBS,GAAnB,EAAwB,QAAxB,CAAN,CAAR;AACAnB,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGH;AACJ,CAhCM","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport {\n    BOOKING_FAIL,\n    BOOKING_SUCCESS\n} from './type';\n\nexport const bookSeats = (busId, userData) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify(userData)\n        const res = await axios.post(`/api/buses/${busId}/tickets`, body, config)\n        console.log(res.data)\n        \n        dispatch({\n            type: BOOKING_SUCCESS,\n            payload: res.data\n        })\n\n        alert(\"Tickets booked succesfully\", \"success\")\n    }\n    catch(err){\n        const errors = err.response.data.errors;\n        console.log\n        if (errors) {\n            errors.forEach(error => {\n                console.log(error.msg)\n                dispatch(alert(error.msg, 'danger'))\n            });\n        }\n        dispatch(alert(err.response.data.msg, \"danger\"))\n        dispatch({\n            type: BOOKING_FAIL,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}