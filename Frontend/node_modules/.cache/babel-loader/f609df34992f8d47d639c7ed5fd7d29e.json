{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport setAuthToken from '../utils/isAuthantication';\nimport Aleart from '../component/layout/Aleart';\nimport { BUSNOT_FOUND, BUS_FOUND } from './type'; // Search bus\n\nexport const searchbus = ({\n  from,\n  to,\n  date\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const start = from.split(\",\");\n  const End = to.split(\",\");\n  from = {\n    \"city\": start[0],\n    \"state\": start[1]\n  };\n  to = {\n    \"city\": End[0],\n    \"state\": End[1]\n  };\n  const [toCity, toState] = to.trim().split(',');\n  const [fromCity, fromState] = from.trim().split(',');\n  const data = {\n    \"source\": {\n      \"city\": toCity,\n      \"state\": toState\n    },\n    \"destination\": {\n      \"city\": fromCity,\n      \"state\": fromState\n    },\n    date\n  }; // const body = JSON.stringify({ from, to, date });\n\n  try {\n    const res = await axios.post('http://localhost:1900/api/admins/', {\n      from,\n      to,\n      date\n    }, config);\n    console.log(res);\n    dispatch({\n      type: BUS_FOUND,\n      payload: res.data\n    });\n    alert(\"Bus Found\");\n  } catch (err) {\n    const errors = err.response.data.err;\n\n    if (errors) {\n      alert(\"Not Found\");\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: BUSNOT_FOUND\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/buses.js"],"names":["axios","setAlert","setAuthToken","Aleart","BUSNOT_FOUND","BUS_FOUND","searchbus","from","to","date","dispatch","config","headers","start","split","End","toCity","toState","trim","fromCity","fromState","data","res","post","console","log","type","payload","alert","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,QAAxC,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAsB,MAAMC,QAAN,IAAgB;AAC3D,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADE,GAAf;AAGA,QAAMC,KAAK,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,CAAd;AACA,QAAMC,GAAG,GAAGP,EAAE,CAACM,KAAH,CAAS,GAAT,CAAZ;AAEAP,EAAAA,IAAI,GAAG;AAAE,YAAQM,KAAK,CAAC,CAAD,CAAf;AAAoB,aAASA,KAAK,CAAC,CAAD;AAAlC,GAAP;AACAL,EAAAA,EAAE,GAAG;AAAE,YAAQO,GAAG,CAAC,CAAD,CAAb;AAAkB,aAASA,GAAG,CAAC,CAAD;AAA9B,GAAL;AAEA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBT,EAAE,CAACU,IAAH,GAAUJ,KAAV,CAAgB,GAAhB,CAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,SAAX,IAAwBb,IAAI,CAACW,IAAL,GAAYJ,KAAZ,CAAkB,GAAlB,CAA9B;AACA,QAAMO,IAAI,GAAG;AACT,cAAU;AACN,cAAQL,MADF;AAEN,eAASC;AAFH,KADD;AAKT,mBAAe;AACX,cAAQE,QADG;AAEX,eAASC;AAFE,KALN;AASTX,IAAAA;AATS,GAAb,CAZ2D,CAuB3D;;AACA,MAAI;AACA,UAAMa,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,mCAAX,EAAgD;AAAChB,MAAAA,IAAD;AAAMC,MAAAA,EAAN;AAASC,MAAAA;AAAT,KAAhD,EAAgEE,MAAhE,CAAlB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAZ,IAAAA,QAAQ,CAAC;AACLgB,MAAAA,IAAI,EAAErB,SADD;AAELsB,MAAAA,OAAO,EAAEL,GAAG,CAACD;AAFR,KAAD,CAAR;AAIAO,IAAAA,KAAK,CAAC,WAAD,CAAL;AACH,GARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBQ,GAAjC;;AACA,QAAIC,MAAJ,EAAY;AACRF,MAAAA,KAAK,CAAC,WAAD,CAAL;AACAE,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIvB,QAAQ,CAACT,QAAQ,CAACgC,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AACDxB,IAAAA,QAAQ,CAAC;AACLgB,MAAAA,IAAI,EAAEtB;AADD,KAAD,CAAR;AAGH;AACJ,CA1CM","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport setAuthToken from '../utils/isAuthantication';\nimport Aleart from '../component/layout/Aleart';\nimport { BUSNOT_FOUND, BUS_FOUND } from './type';\n\n// Search bus\nexport const searchbus = ({ from,to, date}) => async dispatch=>{\n    const config = {\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    const start = from.split(\",\")\n    const End = to.split(\",\")\n\n    from = { \"city\": start[0], \"state\": start[1] }\n    to = { \"city\": End[0], \"state\": End[1] }\n\n    const [toCity, toState] = to.trim().split(',')\n    const [fromCity, fromState] = from.trim().split(',')\n    const data = {\n        \"source\": {\n            \"city\": toCity,\n            \"state\": toState\n        },\n        \"destination\": {\n            \"city\": fromCity,\n            \"state\": fromState\n        },\n        date\n    }\n    // const body = JSON.stringify({ from, to, date });\n    try {\n        const res = await axios.post('http://localhost:1900/api/admins/', {from,to,date}, config);\n        console.log(res)\n        dispatch({\n            type: BUS_FOUND,\n            payload: res.data\n        });\n        alert(\"Bus Found\")\n    } catch (err) {\n        const errors = err.response.data.err;\n        if (errors) {\n            alert(\"Not Found\")\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: BUSNOT_FOUND\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}