{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport setAuthToken from '../utils/isAuthantication';\nimport { USER_LOADED, AUTH_ERROR, SET_ALERT, REMOVE_ALERT, REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_ERROR } from '../action/type'; // // LOAD USER\n// export const loadUser = () => async dispatch => {\n//     if (localStorage.token) {\n//         setAuthToken(localStorage.token);\n//     }\n//     try {\n//         console.log(\"start\")\n//         const res = await axios.get('http://localhost:1900/api/auth/isAuth');\n//         console.log(res)\n//         dispatch({\n//             type: USER_LOADED,\n//             payload: res.data\n//         });\n//     } catch (err) {\n//         dispatch({\n//             type: AUTH_ERROR\n//         });\n//     }\n// };\n// Ragister user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('http://localhost:1900/api/users/signup', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }); // dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.err;\n\n    if (errors) {\n      alert(\"user is Aleardy exit\");\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Ragister user\n\nexport const adminregister = ({\n  name,\n  email,\n  password,\n  isAdmin\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    isAdmin\n  });\n\n  try {\n    const res = await axios.post('http://localhost:1900/api/admins/signup', body, config);\n    console.log(res);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.err;\n\n    if (errors) {\n      alert(\"user is Aleardy exit\");\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // login user\n\nexport const login = (email, password) => async dispatch => {\n  console.log(\"sart login\");\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  console.log(body);\n\n  try {\n    const res = await axios.post('http://localhost:1900/api/auth/login', body);\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    }); // dispatch(loadUser()); \n  } catch (err) {\n    const errors = err.response.data.error;\n\n    if (errors) {\n      errors.forEach(error => dispatch(alert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/auth.js"],"names":["axios","setAlert","setAuthToken","USER_LOADED","AUTH_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_ERROR","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","alert","forEach","error","msg","adminregister","isAdmin","console","log","login"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport setAuthToken from '../utils/isAuthantication';\nimport {\n    USER_LOADED,\n    AUTH_ERROR,\n    SET_ALERT,\n    REMOVE_ALERT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR\n\n} from '../action/type';\n\n// // LOAD USER\n// export const loadUser = () => async dispatch => {\n//     if (localStorage.token) {\n//         setAuthToken(localStorage.token);\n//     }\n//     try {\n//         console.log(\"start\")\n//         const res = await axios.get('http://localhost:1900/api/auth/isAuth');\n//         console.log(res)\n//         dispatch({\n//             type: USER_LOADED,\n//             payload: res.data\n//         });\n//     } catch (err) {\n//         dispatch({\n//             type: AUTH_ERROR\n//         });\n//     }\n// };\n\n// Ragister user\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    const body = JSON.stringify({ name, email, password });\n    try {\n        const res = await axios.post('http://localhost:1900/api/users/signup', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        // dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.err;\n        if (errors) {\n            alert(\"user is Aleardy exit\")\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// Ragister user\nexport const adminregister = ({ name, email, password, isAdmin }) => async dispatch => {\n    const config = {\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    const body = JSON.stringify({ name, email, password, isAdmin });\n    try {\n        const res = await axios.post('http://localhost:1900/api/admins/signup', body, config);\n        console.log(res)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        const errors = err.response.data.err;\n        if (errors) {\n            alert(\"user is Aleardy exit\")\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// login user\nexport const login = (email, password) => async dispatch => {\n    console.log(\"sart login\")\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email, password })\n    console.log(body)\n    try {\n        const res = await axios.post('http://localhost:1900/api/auth/login', body);\n        console.log(res)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        // dispatch(loadUser()); \n    }\n    catch (err) {\n        const errors = err.response.data.error\n        if (errors) {\n            errors.forEach(error => dispatch(alert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: LOGIN_ERROR\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}