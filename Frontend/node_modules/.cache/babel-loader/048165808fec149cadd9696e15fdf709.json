{"ast":null,"code":"import axios from 'axios';\nimport setAlert from './aleart';\nimport { BOOKING_FAIL, BOOKING_SUCCESS, TICKETS, NO_TICKETS } from './type';\nexport const bookSeats = (busId, userData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(userData);\n    const res = await axios.post(`/api/buses/${busId}/tickets`, body, config);\n    console.log(res.data);\n    dispatch({\n      type: BOOKING_SUCCESS,\n      payload: res.data\n    });\n    alert(\"Tickets booked succesfully\", \"success\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(\"\");\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch(alert(\"This Seat Not Found\"));\n    dispatch({\n      type: BOOKING_FAIL\n    });\n  }\n};\nexport const getTickets = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get('/api/auth/tickets', config);\n    dispatch({\n      type: TICKETS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: NO_TICKETS\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/src/action/Bookseat.js"],"names":["axios","setAlert","BOOKING_FAIL","BOOKING_SUCCESS","TICKETS","NO_TICKETS","bookSeats","busId","userData","dispatch","config","headers","body","JSON","stringify","res","post","console","log","data","type","payload","alert","err","errors","response","forEach","error","msg","getTickets","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SACIC,YADJ,EAEIC,eAFJ,EAGIC,OAHJ,EAIIC,UAJJ,QAKO,QALP;AAOA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAiB;AAC3D,MAAI;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAb;AACA,UAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAY,cAAaT,KAAM,UAA/B,EAA0CK,IAA1C,EAAgDF,MAAhD,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AAEAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEjB,eADD;AAELkB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAG,IAAAA,KAAK,CAAC,4BAAD,EAA+B,SAA/B,CAAL;AACH,GAhBD,CAiBA,OAAMC,GAAN,EAAU;AACN,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRF,MAAAA,KAAK,CAAC,EAAD,CAAL;AACAE,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIlB,QAAQ,CAACR,QAAQ,CAAC0B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEFnB,IAAAA,QAAQ,CAACa,KAAK,CAAC,qBAAD,CAAN,CAAR;AACCb,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAElB;AADD,KAAD,CAAR;AAGH;AACJ,CA9BM;AAgCP,OAAO,MAAM2B,UAAU,GAAG,MAAM,MAAMpB,QAAN,IAAiB;AAC7C,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAKA,MAAI;AACA,UAAMI,GAAG,GAAG,MAAMf,KAAK,CAAC8B,GAAN,CAAU,mBAAV,EAA+BpB,MAA/B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEhB,OADD;AAELiB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOI,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAd,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH;AACJ,CAlBM","sourcesContent":["import axios from 'axios';\nimport setAlert from './aleart';\nimport {\n    BOOKING_FAIL,\n    BOOKING_SUCCESS,\n    TICKETS,\n    NO_TICKETS\n} from './type';\n\nexport const bookSeats = (busId, userData) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const body = JSON.stringify(userData)\n        const res = await axios.post(`/api/buses/${busId}/tickets`, body, config)\n        console.log(res.data)\n        \n        dispatch({\n            type: BOOKING_SUCCESS,\n            payload: res.data\n        })\n\n        alert(\"Tickets booked succesfully\", \"success\")\n    }\n    catch(err){\n        const errors = err.response.data.errors;\n        if (errors) {\n            alert(\"\")\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n       dispatch(alert(\"This Seat Not Found\"))\n        dispatch({\n            type: BOOKING_FAIL,\n        })\n    }\n}\n\nexport const getTickets = () => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const res = await axios.get('/api/auth/tickets', config);\n        dispatch({\n            type: TICKETS,\n            payload: res.data\n        });\n    } catch (err) {\n        console.log(err);\n        dispatch({\n            type: NO_TICKETS\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}