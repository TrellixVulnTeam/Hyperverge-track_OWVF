{"ast":null,"code":"var _jsxFileName = \"/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/component/layout/Aleart.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import alerts from \"../../Reducer/aleart\";\n// it is getting pop on the browser!!!!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = ({\n  alert\n}) => alerts !== null && alert.length > 0 && alert.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `alert alert-${alert.alertType}`,\n  children: alert.msg\n}, alert.key, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 13\n}, this));\n\n_c = Alert;\nAlert.propTypes = {\n  alert: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alert: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/component/layout/Aleart.js"],"names":["React","PropTypes","connect","Alert","alert","alerts","length","map","alertType","msg","key","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACVC,MAAM,KAAK,IAAX,IACID,KAAK,CAACE,MAAN,GAAe,CADnB,IAEIF,KAAK,CAACG,GAAN,CAAWH,KAAD,iBACN;AAAqB,EAAA,SAAS,EAAG,eAAcA,KAAK,CAACI,SAAU,EAA/D;AAAA,YACKJ,KAAK,CAACK;AADX,GAAUL,KAAK,CAACM,GAAhB;AAAA;AAAA;AAAA;AAAA,QADJ,CAHR;;KAAMP,K;AASNA,KAAK,CAACQ,SAAN,GAAkB;AACdP,EAAAA,KAAK,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADT,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACX;AADmB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// import alerts from \"../../Reducer/aleart\";\n// it is getting pop on the browser!!!!\n\nconst Alert = ({ alert }) =>\n    alerts !== null &&\n        alert.length > 0 &&\n        alert.map((alert) => (\n            <div key={alert.key} className={`alert alert-${alert.alertType}`}>\n                {alert.msg}\n            </div>\n        ))\n\nAlert.propTypes = {\n    alert: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    alert: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);"]},"metadata":{},"sourceType":"module"}