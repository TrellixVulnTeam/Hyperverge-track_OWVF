{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alerts';\nimport { BUS_FOUND, BUS_NOTFOUND } from './types'; // Search Buses //  \n\nexport const searchbuses = ({\n  to,\n  from,\n  date\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  console.log(config); // to=to.toLowerCase()\n  // from=from.toLowerCase()\n\n  const [toCity, toState] = to.trim().split(',');\n  const [fromCity, fromState] = from.trim().split(',');\n  const data = {\n    \"source\": {\n      \"city\": toCity,\n      \"state\": toState\n    },\n    \"destination\": {\n      \"city\": fromCity,\n      \"state\": fromState\n    },\n    date\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const res = await axios.post('/api/buses', body, config);\n    console.log(\"found\", res.data);\n\n    if (res.data.length == 0) {\n      dispatch({\n        type: BUS_NOTFOUND\n      });\n    } else {\n      dispatch({\n        type: BUS_FOUND,\n        payload: res.data\n      }); // dispatch(loadUser())\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: BUS_NOTFOUND\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/buses.js"],"names":["axios","setAlert","BUS_FOUND","BUS_NOTFOUND","searchbuses","to","from","date","dispatch","config","headers","console","log","toCity","toState","trim","split","fromCity","fromState","data","body","JSON","stringify","res","post","length","type","payload","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGO,SAHP,C,CAMA;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAAwB,MAAMC,QAAN,IAAkB;AACjE,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EANiE,CAOjE;AACA;;AAEA,QAAM,CAACI,MAAD,EAASC,OAAT,IAAoBT,EAAE,CAACU,IAAH,GAAUC,KAAV,CAAgB,GAAhB,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBZ,IAAI,CAACS,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAA9B;AACA,QAAMG,IAAI,GAAG;AACT,cAAU;AACN,cAAQN,MADF;AAEN,eAASC;AAFH,KADD;AAKT,mBAAe;AACX,cAAQG,QADG;AAEX,eAASC;AAFE,KALN;AASTX,IAAAA;AATS,GAAb;AAYA,QAAMa,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb;;AAEA,MAAI;AACA,UAAMI,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BX,MAA/B,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,GAAG,CAACJ,IAAzB;;AACA,QAAII,GAAG,CAACJ,IAAJ,CAASM,MAAT,IAAmB,CAAvB,EAA0B;AACtBjB,MAAAA,QAAQ,CAAC;AACLkB,QAAAA,IAAI,EAAEvB;AADD,OAAD,CAAR;AAIH,KALD,MAMK;AACDK,MAAAA,QAAQ,CAAC;AACLkB,QAAAA,IAAI,EAAExB,SADD;AAELyB,QAAAA,OAAO,EAAEJ,GAAG,CAACJ;AAFR,OAAD,CAAR,CADC,CAMD;AACH;AACJ,GAjBD,CAiBE,OAAOS,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaX,IAAb,CAAkBU,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAI;AACpBxB,QAAAA,QAAQ,CAACP,QAAQ,CAAC+B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAR;AAEH,OAHD;AAIH;;AAEDzB,IAAAA,QAAQ,CAAC;AACLkB,MAAAA,IAAI,EAAEvB;AADD,KAAD,CAAR;AAIH;AACJ,CAzDM","sourcesContent":["import axios from 'axios'\nimport { setAlert } from './alerts'\nimport {\n    BUS_FOUND,\n    BUS_NOTFOUND,\n} from './types';\n\n\n// Search Buses //  \n\nexport const searchbuses = ({ to, from, date }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    console.log(config)\n    // to=to.toLowerCase()\n    // from=from.toLowerCase()\n\n    const [toCity, toState] = to.trim().split(',')\n    const [fromCity, fromState] = from.trim().split(',')\n    const data = {\n        \"source\": {\n            \"city\": toCity,\n            \"state\": toState\n        },\n        \"destination\": {\n            \"city\": fromCity,\n            \"state\": fromState\n        },\n        date\n    }\n\n    const body = JSON.stringify(data)\n\n    try {\n        const res = await axios.post('/api/buses', body, config)\n        console.log(\"found\", res.data)\n        if (res.data.length == 0) {\n            dispatch({\n                type: BUS_NOTFOUND,\n            })\n\n        }\n        else {\n            dispatch({\n                type: BUS_FOUND,\n                payload: res.data\n            })\n\n            // dispatch(loadUser())\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach(error => {\n                dispatch(setAlert(error.msg, 'danger'))\n\n            });\n        }\n\n        dispatch({\n            type: BUS_NOTFOUND,\n        })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}