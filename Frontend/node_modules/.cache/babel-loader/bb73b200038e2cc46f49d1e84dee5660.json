{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alerts\";\nimport { STATUS_ERROR, GET_BUSSTATUS } from \"./types\"; // Get the bus current status\n\nexport const getBusStatus = busId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/buses/${busId}/status`);\n    dispatch({\n      type: GET_BUSSTATUS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\"));\n      });\n    }\n\n    dispatch({\n      type: STATUS_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/Red_bus_app/Frontend/my-app/src/action/busStatus.js"],"names":["axios","setAlert","STATUS_ERROR","GET_BUSSTATUS","getBusStatus","busId","dispatch","res","get","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,SAA5C,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,cAAaH,KAAM,SAA9B,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAW;AACtBV,QAAAA,QAAQ,CAACL,QAAQ,CAACe,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAR;AACH,OAFD;AAGH;;AACDX,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH;AACJ,CAnBM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alerts\";\nimport { STATUS_ERROR, GET_BUSSTATUS } from \"./types\";\n\n// Get the bus current status\nexport const getBusStatus = (busId) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/buses/${busId}/status`);\n        dispatch({\n            type: GET_BUSSTATUS,\n            payload: res.data,\n        });\n        \n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => {\n                dispatch(setAlert(error.msg, \"danger\"));\n            });\n        }\n        dispatch({\n            type: STATUS_ERROR,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}